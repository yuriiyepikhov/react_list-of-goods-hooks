{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","SortType","SORT_FIELD_BY_DEFAULT","default","SORT_FIELD_BY_ALPHABET","alphabet","SORT_FIELD_BY_LENGTH","length","App","sortField","setSortField","useState","reverseStatus","setReverseStatus","visibleGoods","goods","_ref","prepearedGoods","sort","good1","good2","localeCompare","reverse","getPrepearedGoods","_jsxs","className","children","_jsx","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"wOAKO,MAAMA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UACA,IAEGC,EAAQ,SAARA,GAAQ,OAARA,EAAQ,kBAARA,EAAQ,oBAARA,EAAQ,gBAARA,CAAQ,EAARA,GAAQ,IAWb,MAAMC,EAAwBD,EAASE,QACjCC,EAAyBH,EAASI,SAClCC,EAAuBL,EAASM,OA8B/B,MAAMC,EAAgBA,KAC3B,MAAOC,EAAWC,GAAgBC,mBAAmBT,IAC9CU,EAAeC,GAAoBF,oBAAkB,GAEtDG,EAhCR,SACEC,EAAeC,GAEJ,IADX,UAAEP,EAAS,cAAEG,GAA6BI,EAE1C,MAAMC,EAAiB,IAAIF,GAE3B,OAAQN,GACN,KAAKL,EACHa,EAAeC,MAAK,CAACC,EAAOC,IAAUD,EAAME,cAAcD,KAE1D,MAEF,KAAKd,EACHW,EAAeC,MAAK,CAACC,EAAOC,IAAWD,EAAMZ,OAASa,EAAMb,SAYhE,OAJIK,GACFK,EAAeK,UAGVL,CACT,CAOMM,CAAkBvB,EAAiB,CAAES,YAAWG,kBAEpD,OACEY,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,UACEC,KAAK,SACLH,UAAWI,IACT,SACA,UACA,CAAE,WAAYpB,IAAcL,IAE9B0B,QAASA,IAAMpB,EAAaN,GAAwBsB,SACrD,wBAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IACT,SACA,aACA,CAAE,WAAYpB,IAAcH,IAE9BwB,QAASA,IAAMpB,EAAaJ,GAAsBoB,SACnD,mBAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IACT,SACA,aACA,CAAE,YAA8B,IAAlBjB,IAEhBkB,QAASA,KAELjB,GADoB,IAAlBD,EAIJ,EACAc,SACH,aAICjB,IAAcP,IAA2C,IAAlBU,IACvCe,cAAA,UACEC,KAAK,SACLH,UAAU,4BACVK,QAASA,KACPpB,EAAaR,GACbW,GAAiB,EAAM,EACvBa,SACH,aAOLC,cAAA,MAAAD,SACGZ,EAAaiB,KAAIC,GAAQL,cAAA,MAAe,UAAQ,OAAMD,SAAEM,GAAtBA,SAEjC,EChIVC,IAASC,OACPP,cAACnB,EAAG,IACJ2B,SAASC,eAAe,Q","file":"static/js/main.13954d04.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  default = 'default',\n  alphabet = 'alphabet',\n  length = 'length',\n}\n\ninterface ChangeStatus {\n  sortField: SortType;\n  reverseStatus: boolean;\n}\n\nconst SORT_FIELD_BY_DEFAULT = SortType.default;\nconst SORT_FIELD_BY_ALPHABET = SortType.alphabet;\nconst SORT_FIELD_BY_LENGTH = SortType.length;\n\nfunction getPrepearedGoods(\n  goods: string[],\n  { sortField, reverseStatus }: ChangeStatus,\n): string[] {\n  const prepearedGoods = [...goods];\n\n  switch (sortField) {\n    case SORT_FIELD_BY_ALPHABET:\n      prepearedGoods.sort((good1, good2) => good1.localeCompare(good2));\n\n      break;\n\n    case SORT_FIELD_BY_LENGTH:\n      prepearedGoods.sort((good1, good2) => (good1.length - good2.length));\n\n      break;\n\n    default:\n      break;\n  }\n\n  if (reverseStatus) {\n    prepearedGoods.reverse();\n  }\n\n  return prepearedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState<SortType>(SORT_FIELD_BY_DEFAULT);\n  const [reverseStatus, setReverseStatus] = useState<boolean>(false);\n\n  const visibleGoods\n    = getPrepearedGoods(goodsFromServer, { sortField, reverseStatus });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== SORT_FIELD_BY_ALPHABET },\n          )}\n          onClick={() => setSortField(SORT_FIELD_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortField !== SORT_FIELD_BY_LENGTH },\n          )}\n          onClick={() => setSortField(SORT_FIELD_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': reverseStatus === false },\n          )}\n          onClick={() => {\n            if (reverseStatus === false) {\n              setReverseStatus(true);\n            } else {\n              setReverseStatus(false);\n            }\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortField !== SORT_FIELD_BY_DEFAULT || reverseStatus === true) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField(SORT_FIELD_BY_DEFAULT);\n              setReverseStatus(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => <li key={good} data-cy=\"Good\">{good}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}